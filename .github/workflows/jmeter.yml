# .github/workflows/jmeter-test.yml

name: JMeter Performance Test

on:
  workflow_run:
    workflows: ["Deploy to EC2"] # deploy.yml의 name이 "Deploy"일 경우. "Deploy to EC2" 였다면 그것으로 수정
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  performance-test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      # 1. 테스트할 .jmx 파일이 있는 리포지토리를 가져옵니다.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. JMeter Action을 실행합니다.
      # 이 Action이 JMeter 설치와 테스트 실행을 모두 처리합니다.
      - name: Run JMeter Test using GitHub Action
        uses: jmeter-sh/jmeter-action@v3
        with:
          # 실행할 테스트 파일(.jmx)의 경로를 지정합니다.
          test: jmeter/performance-test.jmx
          
          # jmeter 명령어에 전달할 추가 인자들을 지정합니다.
          # -J 옵션을 사용하여 변수를 전달합니다.
          args: "-Jserver.host=${{ secrets.SERVER_HOST }} -Jserver.port=443"

      # 3. 테스트 결과(HTML 리포트)를 업로드합니다.
      # JMeter Action이 'report' 폴더와 'result.jtl' 파일을 생성해 줍니다.
      - name: Upload JMeter HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-test-report
          path: report

      # 4. (선택사항) 상세 로그 파일(.jtl)도 함께 업로드합니다.
      - name: Upload JMeter JTL Log
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-jtl-log
          path: result.jtl
