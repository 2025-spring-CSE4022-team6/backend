name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 🔹 레포지토리 체크아웃
      - name: 🔹 Checkout Repository
        uses: actions/checkout@v3

      # 🐳 Docker buildx 세팅 (ARM64 대응)
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 🛠️ JDK 17 설치
      - name: 🛠️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 🛠️ Gradle로 JAR 파일 빌드
      - name: 🛠️ Build JAR with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      # 🐳 Docker 이미지 빌드 및 푸시 (ARM64 플랫폼)
      - name: 🐳 Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: naaadang/devops-team6:latest
          platforms: linux/arm64

      # 🛠️ EC2 SSH 키 저장 & 권한 설정
      - name: 🛠️ Save SSH Key and Set Permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 🚀 EC2에 SSH 접속 후 배포 실행
      - name: 🚀 Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            cd ~/team6

            echo "🔄 최신 코드 Pull"
            git pull origin main

            echo "🛠️ 도커 컨테이너 중지"
            docker-compose down || true

            echo "🛠️ 최신 Docker 이미지 Pull"
            docker pull naaadang/devops-team6:latest

            echo "🛠️ DB 먼저 실행"
            docker-compose up -d database
            sleep 10

            echo "🚀 Spring 애플리케이션 실행"
            docker-compose up -d app

            echo "🛠️ 실행 중인 컨테이너 확인"
            docker ps

